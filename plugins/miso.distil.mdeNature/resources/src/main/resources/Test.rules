Artifact ATLTranf [
	extension .atl 
	format ATL 
	services : download, read, readAll, readAll, search, update, upload
] {
	info_atl : Info  
	many required inMeta : String    
	many outMeta : String  
}     
       
Artifact MetaModel [
	extension .ecore
	format XMI
	services : upload, download
] {
	info_meta : Info   
	uri_meta : String    	  
}   
    
Artifact Model [
	format XML
	services : read, search, upload, download, update
] { 
	info_model : Info  
	uri_model : String   
}
 
Entity Info {  
	many required author : String
	summary : String
	required version : Double
	active : Boolean   
}   

Artifact Bento [
	extension .bentoz
	format XML
	services : upload, download
] {	
	data : BentoData
	many inputsMeta : String   
	many outputsMeta : String 
	many atl : String	
}

Service ExtractData {
	output : BentoData
	when : Bento [upload, download]
}
 
Entity OutInfo { 
	correct : Boolean
	errors : Integer 
} 

Entity BentoData {
	laNadaMasAbsoluta : Double
}
 
Service Request {
	input : ATLTranf
	output : Model
	when : ATLTranf [upload, download]
}

MultiService Multi [parallel] {
	when : MetaModel [upload, download]
	when : Model [upload, download]
	services : Load, Download
}

MultiService MultiSec {
	when : MetaModel [upload, download]
	when : Model [upload, download, update]
	services : Load, Download
}
 
Service Load {
	input : MetaModel, Info
	output : Model
	when : ATLTranf [search, read, readAll, update]
}

Service Download {
	input : Model
	output : MetaModel, Model
}